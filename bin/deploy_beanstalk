#!/usr/bin/env ruby
require 'ostruct'
require 'optparse'
require 'automat/beanstalk_deployer'

#
# TODO:
# * add cleanup of old versions to stay within some threshold
# * add polling for environment lauch/update success
# * add option for reading in configuration options files
#

def parse_opts(args)
  options = OpenStruct.new

  opts = OptionParser.new do |opts|
    opts.banner = "Usage: #{File.basename($0)} [options]"

    opts.on("-n", "--name SERVICE_NAME", "Name of the service") do |n|
      options.name = n
    end

    opts.on("-l", "--version-label VERSION_LABEL", "Label to use for Beanstalk version") do |l|
      options.version_label = l
    end

    opts.on("-b", "--package-bucket PACKAGE_BUCKET", "S3 bucket for application packages") do |b|
      options.package_bucket = b
    end

    opts.on("-e", "--environment ENVIRONMENT", "Environment tag (prd, dev, etc)") do |e|
      options.environment = e
    end

    opts.on("-t", "--template-name TEMPLATE_NAME", "Beanstalk configuration template name") do |t|
      options.configuration_template = t
    end

    opts.on_tail("-h", "--help", "this message") do
      puts opts
      exit
    end

  end

  opts.parse!(args)

  %w[name version_label package_bucket environment configuration_template].each do |o|
    if options.send(o).nil?
      puts "ERROR: missing #{o}"
      puts opts
      exit 1
    end
  end

  options
end

options = parse_opts(ARGV)

d = Automat::BeanstalkDeployer.new
d.name                   = options.name
d.version                = options.version_label
d.package_bucket         = options.package_bucket
d.environment            = options.environment
d.configuration_template = options.configuration_template

d.run
